//@Library('emailPipeline')
properties([
   pipelineTriggers([pollSCM('*/10 * * * *')]),
   disableConcurrentBuilds()
])
node{  

    def artfactoryServer = Artifactory.server("artifactory")
    def mavenBuild =Artifactory.newMavenBuild()
    env.MAVEN_HOME = "${tool 'maven'}"

    def releaseLibRes = 'libs-release'
    def snapshotLibRes = 'libs-snapshot'

    def releaseLibDep = 'libs-release-local'
    def snapshotLibDep = 'libs-snapshot-local'

    def pomFilename = 'pom.xml'
    def goalsVal ='clean install'


    //Checkout the project code from the repository
   stage('Git Repository')
   {
       checkout scm
   }

    //Configure Artifactory
    //Setup the location where dependencies will be retrieved
    //Setup the location where build artifacts will be deployed 
   stage('configure artifactory')
   {
       mavenBuild.resolver server: artfactoryServer, releaseRepo: releaseLibRes, snapshotRepo: snapshotLibRes
       mavenBuild.deployer server: artfactoryServer, releaseRepo: releaseLibDep , snapshotRepo: snapshotLibDep
   }

   //Build the project,  create and publish the project build info
   stage('build project')
   {
       def projectBuildInfo=mavenBuild.run pom: pomFilename , goals: goalsVal
       artfactoryServer.publishBuildInfo projectBuildInfo
   }

   stage('send email')
   {
   
        // def subjectVar = '''${SCRIPT, template="my-email.template"}'''
        def subjectVar ='sdfsdfds'
        def toVar = 'mgchow5007@gmail.com'
        def bodyVar = 'The artifacts have been published'
        def fromVar = 'Jenkins'
        def mimeTypeVar = 'text/html'

        emailext subject:subjectVar,
        to:toVar,
        body:bodyVar,
        from:fromVar,
        mimeType:mimeTypeVar
        
   }
}